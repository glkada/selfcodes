// RECIEVER CODE

#include <VirtualWire.h>

//declaring pin nos to FIRST L293D
int en1 = 5;
 int en2 = 6;
 int in1 = 7;
 int in2 = 8;
 int in3 = 9;
 int in4 = 10;
 int sirenpin=11;
 int trigPin=12;
 int echoPin=13;
 int trigPin1=14;
 int echoPin1=15;
 int trigPin2=16;
 int echoPin2=17;
 int distance_thresh=400;
 int motorPin[] = {5, 6, 7, 8, 9, 10, 11};//array for storing pin nos

void setup()
{
    
    pinMode(trigPin,OUTPUT);
    pinMode(echoPin,INPUT);
     pinMode(trigPin1,OUTPUT);
    pinMode(echoPin1,INPUT);
     pinMode(trigPin2,OUTPUT);
    pinMode(echoPin2,INPUT);
    Serial.begin(9600);  // Debugging only
    Serial.println("setup");

    // Initialise the IO and ISR
    vw_setup(2000);  // Bits per sec
    vw_set_rx_pin(2);    //Rx Data pin to Digital  Pin 2
    vw_rx_start();       // Start the receiver PLL running

    for (int i = 0; i < 12; i++) 
   {
          pinMode(motorPin[i], OUTPUT);
   }
   /*
    * pinMode(ALLTHEDECLAREDPINS,OUTPUT) 
    */

}//close setup

void loop()
{
    long duration,distance,duration1,duration2,distance1,distance2;
     digitalWrite(trigPin,LOW);
     delayMicroseconds(2);
     digitalWrite(trigPin,HIGH);
      delayMicroseconds(10);
      digitalWrite(trigPin,LOW);
      duration=pulseIn(echoPin,HIGH);
      distance=(duration/2)/29.1;
      Serial.print("Distance =");
      Serial.print(distance);
      Serial.println("cm");
      digitalWrite(trigPin1,LOW);
     delayMicroseconds(2);
     digitalWrite(trigPin1,HIGH);
      delayMicroseconds(10);
      digitalWrite(trigPin1,LOW);
      duration=pulseIn(echoPin1,HIGH);
      distance1=(duration1/2)/29.1;
      Serial.print("Distance 1=");
      Serial.print(distance1);
      Serial.println("cm");
      digitalWrite(trigPin2,LOW);
     delayMicroseconds(2);
     digitalWrite(trigPin2,HIGH);
      delayMicroseconds(10);
      digitalWrite(trigPin2,LOW);
      duration=pulseIn(echoPin2,HIGH);
      distance2=(duration2/2)/29.1;
      Serial.print("Distance 2 =");
      Serial.print(distance2);
      Serial.println("cm");
      
   if (distance <= distance_thresh && distance1 <= distance_thresh && distance2 <= distance_thresh)
   {
    uint8_t buf[VW_MAX_MESSAGE_LEN];
    uint8_t buflen = VW_MAX_MESSAGE_LEN;

    if (vw_get_message(buf, &buflen)) // Non-blocking
    {
        int i;

            digitalWrite(13, true); // Flash a light to show received good message
                 // Message with a good checksum received, dump it.
              for (i = 0; i < buflen; i++)
                  {
                    Serial.print(buf[i]);//print received command
                      if(buf[i] == '1')//if car is in vicinity
                        {
                          gate_open();
                          Serial.println("Gate is Opened");
                          }
                      else 
                        {
          
                          Serial.println("Siren rings");
                          digitalWrite(sirenpin,HIGH);
                        }
    
                   }    
  
      }//close if
      }//if sensor loop closed
      else if (distance > distance_thresh)
      {
        Serial.println("All Clear");
      }
  delay(100);
}//close loop
void gate_open()
{
        
 digitalWrite(en1,HIGH);
 digitalWrite(en2,HIGH);
 digitalWrite(in1,HIGH);
 digitalWrite(in2,LOW);
 digitalWrite(in3,LOW);
 digitalWrite(in4,HIGH);
}

//End Of Code